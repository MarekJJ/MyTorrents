{"version":3,"sources":["dsrToolkit_login-Js.min.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","name","url","templateUrl","controller","params","login","otherwise","$http","$window","$translate","$state","$stateParams","formValidationHelper","progressIndicatorService","toastrWrapper","setValidationMessage","messageKey","then","msg","vm","validationMessage","this","model","signIn","actionId","start","post","response","status","data","stop","location","href","redirectUrl","go","showTranslatedInfo","directive","require","scope","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate","resetPassword","changePassword"],"mappings":"AAAAA,QACKC,OAAO,YAAa,cACpBC,QAAQ,iBAAkB,qBAAsB,SAAUC,EAAgBC,GAEvED,EAAeE,OACXC,KAAM,QACNC,IAAK,IACLC,YAAa,uEACbC,WAAY,2BACZC,QAAUC,MAAS,MAGvBR,EAAeE,OACXC,KAAM,gBACNC,IAAK,iBACLC,YAAa,+EACbC,WAAY,mCACZC,QAAUC,MAAS,MAGvBR,EAAeE,OACXC,KAAM,iBACNC,IAAK,kBACLC,YAAa,gFACbC,WAAY,oCACZC,QAAUC,MAAS,MAGvBP,EAAmBQ,UAAU,QAErCZ,QACKC,OAAO,YACPQ,WAAW,mBAAoB,QAAS,UAAW,aAAc,SAAU,eAAgB,uBAAwB,2BAA4B,gBAC/I,SAAUI,EAAOC,EAASC,EAAYC,EAAQC,EAAcC,EAAsBC,EAA0BC,GAMzG,QAASC,GAAqBC,GAC1BP,EAAWO,GAAYC,KAAK,SAAUC,GAClCC,EAAGC,kBAAoBF,IAP/B,GAAIC,GAAKE,IACTF,GAAGG,SACHH,EAAGG,MAAMjB,MAAQM,EAAaN,MAC9Bc,EAAGC,kBAAoB,KAQvBD,EAAGI,OAAS,WACR,GAAIC,GAAWX,EAAyBY,OAExClB,GAAMmB,KAAK,kBAAmBP,EAAGG,OAC3BL,KAAK,SAAUU,GACZ,GAAIC,GAASD,EAASE,KAAKD,MAO3B,QANAT,EAAGC,kBAAoB,GAER,YAAXQ,GACAf,EAAyBiB,KAAKN,GAG1BI,GACJ,IAAK,UACDpB,EAAQuB,SAASC,KAAOL,EAASE,KAAKI,WACtC,MACJ,KAAK,eACL,IAAK,kBACDlB,EAAqB,+BACrB,MACJ,KAAK,eACDA,EAAqB,qBACrB,MACJ,KAAK,yBACDL,EAAOwB,GAAG,kBAAoB7B,MAAOc,EAAGG,MAAMjB,QAC9CS,EAAcqB,mBAAmB,uCAQzDC,UAAU,YAAa,WACpB,OACIC,QAAS,UACTC,OACIC,gBAAiB,cAErBC,KAAM,SAAUF,EAAOG,EAASC,EAAYC,GAExCA,EAAQC,YAAYC,UAAY,SAAUC,GACtC,MAAOA,KAAeR,EAAMC,iBAGhCD,EAAMS,OAAO,kBAAmB,WAC5BJ,EAAQK,kBAKvB7C,WAAW,2BAA4B,QAAS,SAAU,SAAUI,EAAOG,GACxE,GAAIS,GAAKE,IACTF,GAAGG,SAEHH,EAAG8B,cAAgB,WACf1C,EAAMmB,KAAK,yBAA0BP,EAAGG,OAAOL,KAAK,WAChDP,EAAOwB,GAAG,SAAW7B,MAAOc,EAAGG,MAAMjB,cAKhDF,WAAW,4BAA6B,QAAS,SAAU,eAAgB,SAAUI,EAAOG,EAAQC,GACjG,GAAIQ,GAAKE,IACTF,GAAGG,SACHH,EAAGG,MAAMjB,MAAQM,EAAaN,MAE9Bc,EAAG+B,eAAiB,WAChB3C,EAAMmB,KAAK,0BAA2BP,EAAGG,OAAOL,KAAK,WACjDP,EAAOwB,GAAG,SAAW7B,MAAOc,EAAGG,MAAMjB","file":"dsrToolkit_login-Js.min.js","sourcesContent":["angular\r\n    .module('dsrLogin', ['ui.router'])\r\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider.state({\r\n            name: 'login',\r\n            url: '/',\r\n            templateUrl: '/Content/DSRToolkit/Core/Scripts/Login/templates/login.template.html',\r\n            controller: 'LoginController as $ctrl',\r\n            params: { 'login': '' }\r\n        });\r\n\r\n        $stateProvider.state({\r\n            name: 'resetPassword',\r\n            url: '/resetPassword',\r\n            templateUrl: '/Content/DSRToolkit/Core/Scripts/Login/templates/resetPassword.template.html',\r\n            controller: 'ResetPasswordController as $ctrl',\r\n            params: { 'login': '' }\r\n        });\r\n\r\n        $stateProvider.state({\r\n            name: 'changePassword',\r\n            url: '/changePassword',\r\n            templateUrl: '/Content/DSRToolkit/Core/Scripts/Login/templates/changePassword.template.html',\r\n            controller: 'ChangePasswordController as $ctrl',\r\n            params: { 'login': '' }\r\n        });\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }]);\nangular\r\n    .module('dsrLogin')\r\n    .controller('LoginController', ['$http', '$window', '$translate', '$state', '$stateParams', 'formValidationHelper', 'progressIndicatorService', 'toastrWrapper',\r\n     function ($http, $window, $translate, $state, $stateParams, formValidationHelper, progressIndicatorService, toastrWrapper) {\r\n        var vm = this;\r\n        vm.model = {};\r\n        vm.model.login = $stateParams.login;\r\n        vm.validationMessage = null;\r\n\r\n        function setValidationMessage(messageKey) {\r\n            $translate(messageKey).then(function (msg) {\r\n                vm.validationMessage = msg;\r\n            });\r\n        }\r\n\r\n        vm.signIn = function () {\r\n            var actionId = progressIndicatorService.start();\r\n\r\n            $http.post('/Account/Login/', vm.model)\r\n                 .then(function (response) {\r\n                     var status = response.data.status;\r\n                     vm.validationMessage = '';\r\n\r\n                     if (status !== 'Success') {\r\n                         progressIndicatorService.stop(actionId);\r\n                     }\r\n\r\n                     switch (status) {\r\n                         case 'Success':\r\n                             $window.location.href = response.data.redirectUrl;\r\n                             break;\r\n                         case 'InvalidLogin':\r\n                         case 'InvalidPassword':\r\n                             setValidationMessage('login.invalidLoginOrPassword');\r\n                             break;\r\n                         case 'InactiveUser':\r\n                             setValidationMessage('login.inactiveUser');\r\n                             break;\r\n                         case 'PasswordChangeRequired':\r\n                             $state.go('changePassword', { login: vm.model.login });\r\n                             toastrWrapper.showTranslatedInfo('login.passwordChangeRequired');\r\n                             break;\r\n                         default:\r\n                             break;\r\n                     }\r\n                 });\r\n        };\r\n     }])\r\n    .directive('compareTo', function () {\r\n        return {\r\n            require: \"ngModel\",\r\n            scope: {\r\n                otherModelValue: \"=compareTo\"\r\n            },\r\n            link: function (scope, element, attributes, ngModel) {\r\n\r\n                ngModel.$validators.compareTo = function (modelValue) {\r\n                    return modelValue === scope.otherModelValue;\r\n                };\r\n\r\n                scope.$watch(\"otherModelValue\", function () {\r\n                    ngModel.$validate();\r\n                });\r\n            }\r\n        };\r\n    })\r\n    .controller('ResetPasswordController', ['$http', '$state', function ($http, $state) {\r\n        var vm = this;\r\n        vm.model = {};\r\n\r\n        vm.resetPassword = function () {\r\n            $http.post('/Account/ResetPassword', vm.model).then(function () {\r\n                $state.go('login', { login: vm.model.login })\r\n            });\r\n        };\r\n\r\n    }])\r\n    .controller('ChangePasswordController', ['$http', '$state', '$stateParams', function ($http, $state, $stateParams) {\r\n        var vm = this;\r\n        vm.model = {};\r\n        vm.model.login = $stateParams.login;\r\n\r\n        vm.changePassword = function () {\r\n            $http.post('/Account/ChangePassword', vm.model).then(function () {\r\n                $state.go('login', { login: vm.model.login })\r\n            });\r\n        };\r\n    }]);"]}