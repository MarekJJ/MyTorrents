angular.module("dsrUsers",["ui.router","datatables","datatables.bootstrap","dsrDataTables"]).config(["DefaultModuleStateProvider",function(e){e.initialize({entityName:"User",templatesPath:"/Content/DSRToolkit/UserManagement/Users/templates/",permissionRoot:"Administration/Users/"})}]),angular.module("dsrUsers").factory("usersRemoveService",["genericRemoveService",function(e){return{remove:function(t){return e("/Administration/Users/RemoveUsers","users.removeConfirmationMessage").remove(t)}}}]),angular.module("dsrUsers").controller("AddOrUpdateUserController",["$q","$state","$stateParams","$translate","$http","toastrWrapper","usersRemoveService","confirmationService",function(e,t,s,o,r,i,n,a){function d(){r.post("/Administration/Users/GetUserEditViewModel/"+(s.id||"")).then(function(e){var t=e.data;t.user?(angular.extend(u.model,t.user),u.subtitle=t.user.login):u.model.isActive=!0,u.userRoles=t.userRoles,u.unassignedWorkers=t.unassignedWorkers,u.userSites=t.userSites,u.userSitesDict=l(u.userSites)})}function l(e){var t={};return angular.forEach(e,function(e){var s={code:e.text,active:e.active};t[e.value]=s}),t}var u=this;u.isEditMode="edit"===t.current.name,u.model={},u.reloadWorkresDropdown=function(t){return t?r.post("/Administration/Users/GetWorkerForDropDown",{search:t}).then(function(e){var t=[];$.each(e.data,function(e,s){var o=!1;o||t.push(s)}),u.unassignedWorkers=t}):e.resolve()},u.save=function(){r.post("/Administration/Users/AddOrUpdateUser",u.model).then(function(){i.showTranslatedSuccess("users.savedSuccessfully"),u.goToListView()})},u.goToListView=function(){t.go("list")},u.remove=function(){n.remove(u.model.id).then(function(){u.goToListView()})},u.resetPassword=function(){a.showTranslatedConfirmation("login.resetPasswordConfirmationMessage").result.then(function(){return r.post("/Administration/Users/ResetPassword/"+u.model.id)})},u.forcePasswordChange=function(){a.showTranslatedConfirmation("login.forcePasswordChangeConfirmationMessage").result.then(function(){return r.post("/Administration/Users/ForcePasswordChange/"+u.model.id)})},u.onSiteRemove=function(e,t){u.model.defaultSiteId===t&&(u.model.defaultSiteId=null)},u.isEditMode||o("users.addNewUser").then(function(e){u.subtitle=e}),d()}]),angular.module("dsrUsers").controller("PreviewUserController",["$state","$stateParams","$http","usersRemoveService",function(e,t,s,o){var r=this;return r.model={},r.goToListView=function(){e.go("list")},r.goToEditView=function(){e.go("edit",{id:r.model.id})},r.remove=function(){o.remove(r.model.id).then(function(){r.goToListView()})},t.id?void s.post("/Administration/Users/GetUserPreviewViewModel/"+t.id).then(function(e){angular.extend(r.model,e.data),r.subtitle=r.model.login}):void r.goToListView()}]),angular.module("dsrUsers").controller("UserListController",["DTColumnBuilder","$translate","usersRemoveService",function(e,t,s){var o=this;o.options={tableDataUrl:"/Administration/Users/GetUserList",columns:[e.newColumn("login").withTitle(t("common.login")),e.newColumn("email").withTitle(t("common.email")),e.newColumn("isActive").withTitle(t("common.active")).withClass("text-center").renderWith(function(e,t,s){return'<readonly-checkbox checked="'+s.isActive+'" />'})],permissions:{view:"Administration/Users/View",edit:"Administration/Users/Edit",delete:"Administration/Users/Delete",add:"Administration/Users/Add"},removeItems:function(e){return s.remove(e)}}}]);
//# sourceMappingURL=dsrToolkit_users-Js.min.js.map
