angular.module("sfcActivityTimeCorrection",["ui.router","datatables","datatables.bootstrap","dsrDataTables"]).config(["DefaultModuleStateProvider",function(t){t.initialize({entityName:"ActivityTimeCorrection",templatesPath:"/Areas/Activities/Scripts/ActivityTimeCorrection/templates/",permissionRoot:"Activities/ActivityTimeCorrection/"})}]),angular.module("sfcActivityTimeCorrection").controller("ActivityTimeCorrectionListController",["DTColumnBuilder","$translate","formattedDateTimeFilter",function(t,e,i){var n=this;n.options={tableDataUrl:"/Activities/ActivityTimeCorrection/GetList",modelId:"activityId",columns:[t.newColumn("worker").withTitle(e("common.worker")),t.newColumn("startDate").withTitle(e("common.startDate")).renderWith(function(t,e,n){return i(t)}),t.newColumn("endDate").withTitle(e("common.endDate")).renderWith(function(t,e,n){return i(t)}),t.newColumn("dateDelta").withTitle(e("common.durationTime")),t.newColumn("workOrderNumber").withTitle(e("workorder.orderId")),t.newColumn("workOrderSecondNumber").withTitle(e("workorder.orderNumber")),t.newColumn("partNumber").withTitle(e("part.name")),t.newColumn("routingOperation").withTitle(e("technology.operation")),t.newColumn("status").withTitle(e("common.status")),t.newColumn("statusReason").withTitle(e("common.statusReason")),t.newColumn("department").withTitle(e("machine.department")),t.newColumn("workCenter").withTitle(e("machine.workCenter")),t.newColumn("machine").withTitle(e("machine.name"))],editButtonLabel:e.instant("common.correction"),permissions:{add:"Activities/ActivityTimeCorrection/Add",edit:"Activities/ActivityTimeCorrection/Edit",delete:!1,view:!1}}}]),angular.module("sfcActivityTimeCorrection").directive("overlapActivityAsyncValidator",["$http","$q","formattedDateTimeWithSecondsFilter",function(t,e,i){return{require:"ngModel",link:function(n,r,o,a){a.$asyncValidators.overlapActivityAsyncValidator=function(r){if(!a.$dirty)return e.resolve();var c=n.$eval(o.activityId),d=n.$eval(o.workerId),s=n.$eval(o.isEndDate)||!1,l=moment(r).milliseconds(0);if(!d||!l.isValid())return e.resolve();var u={activityId:c,workerId:d,date:l,isEndDate:s};return t.post("/Activities/ActivityTimeCorrection/GetOverlapActivityInfo",u).then(function(t){var n=t.data.overlappingActivityExists;return a.overlappingActivityStartDate=i(t.data.overlappingActivityStartDate),a.overlappingActivityEndDate=t.data.overlappingActivityEndDate?i(t.data.overlappingActivityEndDate):null,n?e.reject():e.resolve()})}}}}]).directive("startDateShouldNotBeLaterThanEndDate",[function(){return{require:"ngModel",link:function(t,e,i,n){n.$validators.startDateShouldBeEarlierThanEndDate=function(e){var n=t.$eval(i.endDate);if(n){var r=moment(e).milliseconds(0),o=moment(n).milliseconds(0);return r<=o}return!0}}}}]).controller("AddOrUpdateActivityTimeCorrectionController",["$http","$state","$stateParams","$q","$scope","toastrWrapper",function(t,e,i,n,r,o){function a(){var e=i.id||"";t.post("/Activities/ActivityTimeCorrection/GetEdit/"+e).then(function(t){t.data.model=t.data.model||{},angular.extend(s,t.data),s.nonProductiveStatusSelected=!!t.data.model.departmentId})}function c(e){return s.machinePerRouting[e]?n.resolve(s.machinePerRouting[e]):t.post("/Activities/ActivityTimeCorrection/GetMachineForRouting",{routingId:e}).then(function(t){return t.data})}function d(e,i,n){return t.post(e,{search:n}).then(function(t){s[i]=t.data})}var s=this;s.isEditMode="edit"===e.current.name,s.model={},s.machinePerRouting={},s.onWorkerLoginChanged=function(t){s.model.workerFullName=t?t.details:null,r.$broadcast("event:endDate-revalidate"),r.$broadcast("event:startDate-revalidate")},s.onWorkOrderIdChanged=function(e,i){s.model.workOrderSecondNumber=e?e.details:null,s.model.routingId=null,!s.operationsPerWorkOrder[i]&&i&&t.post("/Activities/ActivityTimeCorrection/GetOperations/",{workOrderId:i}).then(function(t){s.operationsPerWorkOrder[i]=t.data})},s.onMachineIdChanged=function(e){s.workCenterAndDepartmentPerMachine[e]||t.post("/Activities/ActivityTimeCorrection/GetWorkCenterAndDepartmentForMachine/",{machineId:e}).then(function(t){s.workCenterAndDepartmentPerMachine[e]=t.data})},s.onOperationChanged=function(t){c(t).then(function(t){s.model.machineId=t})},s.onStatusChanged=function(e,i){s.model.statusReasonId=null,s.nonProductiveStatusSelected=i,i||(s.model.departmentId=null),s.statusReasonsPerStatus[e]||t.post("/Activities/ActivityTimeCorrection/GetStatusReasons/",{statusId:e}).then(function(t){s.statusReasonsPerStatus[e]=t.data})},s.revalidateStartDate=function(){r.$broadcast("event:startDate-revalidate")},s.reloadWorkOrders=function(t){return d("/Activities/ActivityTimeCorrection/GetWorkOrders/","workOrders",t)},s.reloadMachines=function(t){return d("/Activities/ActivityTimeCorrection/GetMachines/","machines",t)},s.reloadWorkerLogins=function(t){return d("/Activities/ActivityTimeCorrection/GetWorkerLogins/","workerLogins",t)},s.save=function(){var e=angular.copy(s.model);return t.post("/Activities/ActivityTimeCorrection/AddOrUpdate",e).then(function(){var t=s.isEditMode?"activityTimeCorrection.saveSuccessfully":"activityTimeCorrection.addedSuccessfully";o.showTranslatedSuccess(t),s.goToListView()})},s.goToListView=function(){e.go("list")},r.$watch(function(){return s.model.machineId},function(t){t&&s.onMachineIdChanged(t)}),a()}]);
//# sourceMappingURL=activityTimeCorrection-Js.min.js.map
