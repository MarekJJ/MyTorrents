{"version":3,"sources":["dsrToolkit_users-Js.min.js"],"names":["angular","module","config","DefaultModuleStateProvider","initialize","entityName","templatesPath","permissionRoot","factory","genericRemoveService","remove","ids","controller","$q","$state","$stateParams","$translate","$http","toastrWrapper","usersRemoveService","confirmationService","loadModel","post","id","then","response","data","user","extend","vm","model","subtitle","login","isActive","userRoles","unassignedWorkers","userSites","userSitesDict","convertToDictionary","forEach","userSiteItem","codeActivePair","code","text","active","value","this","isEditMode","current","name","reloadWorkresDropdown","search","newaddList","$","each","key","val","exsist","push","resolve","save","showTranslatedSuccess","goToListView","go","resetPassword","showTranslatedConfirmation","result","forcePasswordChange","onSiteRemove","item","siteId","defaultSiteId","goToEditView","DTColumnBuilder","options","tableDataUrl","columns","newColumn","withTitle","withClass","renderWith","type","full","permissions","view","edit","delete","add","removeItems"],"mappings":"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","file":"dsrToolkit_users-Js.min.js","sourcesContent":["angular\r\n    .module('dsrUsers', ['ui.router', 'datatables', 'datatables.bootstrap', 'dsrDataTables'])\r\n    .config(['DefaultModuleStateProvider', function (DefaultModuleStateProvider) {\r\n        DefaultModuleStateProvider.initialize({\r\n            entityName: 'User',\r\n            templatesPath: '/Content/DSRToolkit/UserManagement/Users/templates/',\r\n            permissionRoot: 'Administration/Users/'\r\n        });\r\n    }]);\nangular\r\n    .module('dsrUsers')\r\n    .factory('usersRemoveService', ['genericRemoveService', function (genericRemoveService) {\r\n        return {\r\n            remove: function (ids) {\r\n                return genericRemoveService('/Administration/Users/RemoveUsers', 'users.removeConfirmationMessage').remove(ids);\r\n            }\r\n        };\r\n    }]);\nangular\r\n    .module('dsrUsers')\r\n    .controller('AddOrUpdateUserController', ['$q','$state', '$stateParams', '$translate', '$http', 'toastrWrapper', 'usersRemoveService', 'confirmationService',\r\n     function ($q, $state, $stateParams, $translate, $http, toastrWrapper, usersRemoveService, confirmationService) {\r\n         var vm = this;\r\n         vm.isEditMode = $state.current.name === 'edit';\r\n         vm.model = {};\r\n\r\n         function loadModel() {\r\n             $http.post('/Administration/Users/GetUserEditViewModel/' + ($stateParams.id || ''))\r\n                 .then(function (response) {\r\n                     var data = response.data;\r\n\r\n                     if (data.user) {\r\n                         angular.extend(vm.model, data.user);\r\n                         vm.subtitle = data.user.login;\r\n                     }\r\n                     else {\r\n                         vm.model.isActive = true;\r\n                     }\r\n\r\n                     vm.userRoles = data.userRoles;\r\n                     vm.unassignedWorkers = data.unassignedWorkers;\r\n                     vm.userSites = data.userSites;\r\n                     vm.userSitesDict = convertToDictionary(vm.userSites);\r\n                 });\r\n         }\r\n\r\n         function convertToDictionary(userSites) {\r\n             var userSitesDict = {};\r\n             angular.forEach(userSites, function (userSiteItem) {\r\n                 var codeActivePair = {\r\n                     code: userSiteItem.text,\r\n                     active: userSiteItem.active\r\n                 };\r\n                 userSitesDict[userSiteItem.value] = codeActivePair;\r\n             });\r\n\r\n             return userSitesDict;\r\n         }\r\n\r\n         vm.reloadWorkresDropdown = function (search) {\r\n             if (search) {\r\n                 return $http.post('/Administration/Users/GetWorkerForDropDown', { search: search }).then(function (response) {\r\n                     var newaddList = [];\r\n                     $.each(response.data, function (key, val) {\r\n                         var exsist = false;\r\n                         if (!exsist) {\r\n                             newaddList.push(val);\r\n                         }\r\n                     });\r\n                     vm.unassignedWorkers = newaddList;\r\n                 });\r\n             }\r\n             return $q.resolve();\r\n         };\r\n\r\n         vm.save = function () {\r\n             $http.post('/Administration/Users/AddOrUpdateUser', vm.model)\r\n                 .then(function () {\r\n                     toastrWrapper.showTranslatedSuccess('users.savedSuccessfully');\r\n                     vm.goToListView();\r\n                 });\r\n         };\r\n\r\n         vm.goToListView = function () {\r\n             $state.go('list');\r\n         };\r\n\r\n         vm.remove = function () {\r\n             usersRemoveService.remove(vm.model.id).then(function () {\r\n                 vm.goToListView();\r\n             });\r\n         };\r\n\r\n         vm.resetPassword = function () {\r\n             confirmationService.showTranslatedConfirmation('login.resetPasswordConfirmationMessage').result.then(function () {\r\n                 return $http.post('/Administration/Users/ResetPassword/' + vm.model.id);\r\n             });\r\n         };\r\n\r\n         vm.forcePasswordChange = function () {\r\n             confirmationService.showTranslatedConfirmation('login.forcePasswordChangeConfirmationMessage').result.then(function () {\r\n                 return $http.post('/Administration/Users/ForcePasswordChange/' + vm.model.id);\r\n             });\r\n         };\r\n\r\n         vm.onSiteRemove = function (item, siteId) {\r\n             if (vm.model.defaultSiteId === siteId) {\r\n                 vm.model.defaultSiteId = null;\r\n             }\r\n         };\r\n\r\n         if (!vm.isEditMode) {\r\n             $translate('users.addNewUser').then(function (subtitle) {\r\n                 vm.subtitle = subtitle;\r\n             });\r\n         }\r\n\r\n         loadModel();\r\n     }]);\nangular\r\n    .module('dsrUsers')\r\n    .controller('PreviewUserController', ['$state', '$stateParams', '$http', 'usersRemoveService', function ($state, $stateParams, $http, usersRemoveService) {\r\n        var vm = this;\r\n        vm.model = {};\r\n\r\n        vm.goToListView = function () {\r\n            $state.go('list');\r\n        };\r\n\r\n        vm.goToEditView = function () {\r\n            $state.go('edit', { id: vm.model.id });\r\n        };\r\n\r\n        vm.remove = function () {\r\n            usersRemoveService.remove(vm.model.id).then(function () {\r\n                vm.goToListView();\r\n            });\r\n        };\r\n\r\n        if ($stateParams.id) {\r\n            $http.post('/Administration/Users/GetUserPreviewViewModel/' + $stateParams.id)\r\n                .then(function (response) {\r\n                    angular.extend(vm.model, response.data);\r\n                    vm.subtitle = vm.model.login;\r\n                });\r\n        }\r\n        else {\r\n            vm.goToListView();\r\n            return;\r\n        }\r\n    }]);\nangular\r\n    .module('dsrUsers')\r\n    .controller('UserListController', ['DTColumnBuilder', '$translate', 'usersRemoveService', function (DTColumnBuilder, $translate, usersRemoveService) {\r\n        var vm = this;\r\n\r\n        vm.options = {\r\n            tableDataUrl: '/Administration/Users/GetUserList',\r\n            columns: [\r\n                DTColumnBuilder.newColumn('login').withTitle($translate('common.login')),\r\n                DTColumnBuilder.newColumn('email').withTitle($translate('common.email')),\r\n                DTColumnBuilder.newColumn('isActive').withTitle($translate('common.active')).withClass('text-center').renderWith(function (data, type, full) {\r\n                    return '<readonly-checkbox checked=\"' + full.isActive + '\" />';\r\n                })\r\n            ],\r\n            permissions: {\r\n                'view': 'Administration/Users/View',\r\n                'edit': 'Administration/Users/Edit',\r\n                'delete': 'Administration/Users/Delete',\r\n                'add': 'Administration/Users/Add'\r\n            },\r\n            removeItems: function (ids) {\r\n                return usersRemoveService.remove(ids);\r\n            }\r\n        };\r\n    }]);"]}