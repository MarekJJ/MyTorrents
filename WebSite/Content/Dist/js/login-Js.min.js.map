{"version":3,"sources":["login-Js.min.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","name","url","templateUrl","controller","params","username","otherwise","$http","$window","$translate","$stateParams","progressIndicatorService","setValidationMessage","messageKey","then","msg","vm","validationMessage","this","model","signIn","actionId","start","post","response","status","data","stop","location","href","redirectUrl","directive","require","scope","otherModelValue","link","element","attributes","ngModel","$validators","compareTo","modelValue","$watch","$validate"],"mappings":"AAAAA,QACKC,OAAO,YAAa,cACpBC,QAAQ,iBAAkB,qBAAsB,SAAUC,EAAgBC,GAEvED,EAAeE,OACXC,KAAM,WACNC,IAAK,IACLC,YAAa,oCACbC,WAAY,2BACZC,QAAUC,SAAY,MAG1BP,EAAmBQ,UAAU,QAErCZ,QACKC,OAAO,YACPQ,WAAW,mBAAoB,QAAS,UAAW,aAAc,eAAgB,2BACjF,SAAUI,EAAOC,EAASC,EAAYC,EAAcC,GAMjD,QAASC,GAAqBC,GAC1BJ,EAAWI,GAAYC,KAAK,SAAUC,GAClCC,EAAGC,kBAAoBF,IAP/B,GAAIC,GAAKE,IACTF,GAAGG,SACHH,EAAGG,MAAMd,SAAWK,EAAaL,SACjCW,EAAGC,kBAAoB,KAQvBD,EAAGI,OAAS,WACR,GAAIC,GAAWV,EAAyBW,OACxCf,GAAMgB,KAAK,aAAcP,EAAGG,OACtBL,KAAK,SAAUU,GACZ,GAAIC,GAASD,EAASE,KAAKD,MAM3B,QALAT,EAAGC,kBAAoB,GACR,YAAXQ,GACAd,EAAyBgB,KAAKN,GAG1BI,GACJ,IAAK,UACDjB,EAAQoB,SAASC,KAAOL,EAASE,KAAKI,WACtC,MACJ,KAAK,SACL,IAAK,gBACDlB,EAAqB,+BACrB,MACJ,KAAK,WACDA,EAAqB,qBACrB,MACJ,KAAK,YACDA,EAAqB,0BAQ7CmB,UAAU,YAAa,WACpB,OACIC,QAAS,UACTC,OACIC,gBAAiB,cAErBC,KAAM,SAAUF,EAAOG,EAASC,EAAYC,GAExCA,EAAQC,YAAYC,UAAY,SAAUC,GACtC,MAAOA,KAAeR,EAAMC,iBAGhCD,EAAMS,OAAO,kBAAmB,WAC5BJ,EAAQK","file":"login-Js.min.js","sourcesContent":["angular\r\n    .module('sfcLogin', ['ui.router'])\r\n    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n\r\n        $stateProvider.state({\r\n            name: 'username',\r\n            url: '/',\r\n            templateUrl: '/StaticViews/Auth/_loginView.html',\r\n            controller: 'LoginController as $ctrl',\r\n            params: { 'username': '' }\r\n        });\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n    }]);\nangular\r\n    .module('sfcLogin')\r\n    .controller('LoginController', ['$http', '$window', '$translate', '$stateParams', 'progressIndicatorService',\r\n     function ($http, $window, $translate, $stateParams, progressIndicatorService) {\r\n        var vm = this;\r\n        vm.model = {};\r\n        vm.model.username = $stateParams.username;\r\n        vm.validationMessage = null;\r\n\r\n        function setValidationMessage(messageKey) {\r\n            $translate(messageKey).then(function (msg) {\r\n                vm.validationMessage = msg;\r\n            });\r\n        }\r\n\r\n        vm.signIn = function () {\r\n            var actionId = progressIndicatorService.start();\r\n            $http.post('/Auth/Log/', vm.model)\r\n                 .then(function (response) {\r\n                     var status = response.data.status;\r\n                     vm.validationMessage = '';\r\n                     if (status !== 'Success') {\r\n                         progressIndicatorService.stop(actionId);\r\n                     }\r\n\r\n                     switch (status) {\r\n                         case 'Success':\r\n                             $window.location.href = response.data.redirectUrl;\r\n                             break;\r\n                         case 'NoUser':\r\n                         case 'WrongPassword':\r\n                             setValidationMessage('login.invalidLoginOrPassword');\r\n                             break;\r\n                         case 'Inactive':\r\n                             setValidationMessage('login.inactiveUser');\r\n                             break;\r\n                         case 'OldPortal':\r\n                             setValidationMessage('login.oldPortal');\r\n                             break;\r\n                         default:\r\n                             break;\r\n                     }\r\n                 });\r\n        };\r\n     }])\r\n    .directive('compareTo', function () {\r\n        return {\r\n            require: \"ngModel\",\r\n            scope: {\r\n                otherModelValue: \"=compareTo\"\r\n            },\r\n            link: function (scope, element, attributes, ngModel) {\r\n\r\n                ngModel.$validators.compareTo = function (modelValue) {\r\n                    return modelValue === scope.otherModelValue;\r\n                };\r\n\r\n                scope.$watch(\"otherModelValue\", function () {\r\n                    ngModel.$validate();\r\n                });\r\n            }\r\n        };\r\n    });"]}