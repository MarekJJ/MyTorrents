{"version":3,"sources":["dsrToolkit_workers-Js.min.js"],"names":["angular","module","config","DefaultModuleStateProvider","initialize","entityName","templatesPath","permissionRoot","factory","genericRemoveService","remove","ids","controller","$state","$stateParams","$translate","$http","toastrWrapper","workersRemoveService","GlobalConfiguration","loadModel","post","id","then","response","data","worker","extend","vm","model","subtitle","firstName","lastName","unassignedUsers","this","isEditMode","current","name","isExternalNameEditable","isWorkerExternalNameEditable","save","showTranslatedSuccess","goToListView","go","goToEditView","DTColumnBuilder","options","tableDataUrl","columns","newColumn","withTitle","permissions","view","edit","delete","add","removeItems"],"mappings":"AAAAA,QACKC,OAAO,cAAe,YAAa,aAAc,uBAAwB,kBACzEC,QAAQ,6BAA8B,SAAUC,GAC7CA,EAA2BC,YACvBC,WAAY,SACZC,cAAe,wDACfC,eAAgB,+BAG5BP,QACKC,OAAO,cACPO,QAAQ,wBAAyB,uBAAwB,SAAUC,GAChE,OACIC,OAAQ,SAAUC,GACd,MAAOF,GAAqB,wCAAyC,qCAAqCC,OAAOC,QAIjIX,QACKC,OAAO,cACPW,WAAW,+BAAgC,SAAU,eAAgB,aAAc,QAAS,gBAAiB,uBAAwB,sBACrI,SAAUC,EAAQC,EAAcC,EAAYC,EAAOC,EAAeC,EAAsBC,GAMpF,QAASC,KACLJ,EAAMK,KAAK,mDAAqDP,EAAaQ,IAAM,KAAKC,KAAK,SAAUC,GACpG,GAAIC,GAAOD,EAASC,IAEhBA,GAAKC,SACL1B,QAAQ2B,OAAOC,EAAGC,MAAOJ,EAAKC,QAC9BE,EAAGE,SAAWL,EAAKC,OAAOK,UAAY,IAAMN,EAAKC,OAAOM,UAG5DJ,EAAGK,gBAAkBR,EAAKQ,kBAdjC,GAAIL,GAAKM,IACTN,GAAGO,WAAqC,SAAxBtB,EAAOuB,QAAQC,KAC/BT,EAAGU,uBAAyBnB,EAAoBoB,+BAAgC,EAChFX,EAAGC,SAeHD,EAAGY,KAAO,WACNxB,EAAMK,KAAK,4CAA6CO,EAAGC,OAAON,KAAK,WACpEN,EAAcwB,sBAAsB,6BACpCb,EAAGc,kBAIVd,EAAGc,aAAe,WACd7B,EAAO8B,GAAG,SAGdf,EAAGlB,OAAS,WACRQ,EAAqBR,OAAOkB,EAAGC,MAAMP,IAAIC,KAAK,WAC1CK,EAAGc,kBAINd,EAAGO,YACJpB,EAAW,sBAAsBQ,KAAK,SAAUO,GAC5CF,EAAGE,SAAWA,IAItBV,OAETpB,QACKC,OAAO,cACPW,WAAW,2BAA4B,SAAU,eAAgB,QAAS,uBAAwB,SAAUC,EAAQC,EAAcE,EAAOE,GACtI,GAAIU,GAAKM,IAiBT,OAhBAN,GAAGC,SAEHD,EAAGc,aAAe,WACd7B,EAAO8B,GAAG,SAGdf,EAAGgB,aAAe,WACd/B,EAAO8B,GAAG,QAAUrB,GAAIM,EAAGC,MAAMP,MAGrCM,EAAGlB,OAAS,WACRQ,EAAqBR,OAAOkB,EAAGC,MAAMP,IAAIC,KAAK,WAC1CK,EAAGc,kBAIP5B,EAAaQ,OACbN,GAAMK,KAAK,qDAAuDP,EAAaQ,IAC1EC,KAAK,SAAUC,GACZxB,QAAQ2B,OAAOC,EAAGC,MAAOL,EAASC,MAClCG,EAAGE,SAAWF,EAAGC,MAAME,UAAY,IAAMH,EAAGC,MAAMG,eAI1DJ,GAAGc,kBAIf1C,QACKC,OAAO,cACPW,WAAW,wBAAyB,kBAAmB,aAAc,uBAAwB,SAAUiC,EAAiB9B,EAAYG,GACjI,GAAIU,GAAKM,IAETN,GAAGkB,SACCC,aAAc,wCACdC,SACIH,EAAgBI,UAAU,aAAaC,UAAUnC,EAAW,qBAC5D8B,EAAgBI,UAAU,YAAYC,UAAUnC,EAAW,oBAC3D8B,EAAgBI,UAAU,gBAAgBC,UAAUnC,EAAW,yBAEnEoC,aACIC,KAAQ,8BACRC,KAAQ,8BACRC,OAAU,gCACVC,IAAO,8BAEXC,YAAa,SAAU7C,GACnB,MAAOO,GAAqBR,OAAOC","file":"dsrToolkit_workers-Js.min.js","sourcesContent":["angular\r\n    .module('dsrWorkers', ['ui.router', 'datatables', 'datatables.bootstrap', 'dsrDataTables'])\r\n    .config(['DefaultModuleStateProvider', function (DefaultModuleStateProvider) {\r\n        DefaultModuleStateProvider.initialize({\r\n            entityName: 'Worker',\r\n            templatesPath: '/Content/DSRToolkit/UserManagement/Workers/templates/',\r\n            permissionRoot: 'Administration/Workers/'\r\n        });\r\n    }]);\nangular\r\n    .module('dsrWorkers')\r\n    .factory('workersRemoveService', ['genericRemoveService', function (genericRemoveService) {\r\n        return {\r\n            remove: function (ids) {\r\n                return genericRemoveService('/Administration/Workers/RemoveWorkers', 'workers.removeConfirmationMessage').remove(ids);\r\n            }\r\n        };\r\n    }]);\nangular\r\n    .module('dsrWorkers')\r\n    .controller('AddOrUpdateWorkerController', ['$state', '$stateParams', '$translate', '$http', 'toastrWrapper', 'workersRemoveService', 'GlobalConfiguration',\r\n     function ($state, $stateParams, $translate, $http, toastrWrapper, workersRemoveService, GlobalConfiguration) {\r\n         var vm = this;\r\n         vm.isEditMode = $state.current.name === 'edit';\r\n         vm.isExternalNameEditable = GlobalConfiguration.isWorkerExternalNameEditable || false;\r\n         vm.model = {};\r\n\r\n         function loadModel() {\r\n             $http.post('/Administration/Workers/GetWorkerEditViewModel/' + ($stateParams.id || '')).then(function (response) {\r\n                var data = response.data;\r\n\r\n                if (data.worker) {\r\n                    angular.extend(vm.model, data.worker);\r\n                    vm.subtitle = data.worker.firstName + ' ' + data.worker.lastName;\r\n                }\r\n\r\n                vm.unassignedUsers = data.unassignedUsers;\r\n            });\r\n         }\r\n\r\n         vm.save = function () {\r\n             $http.post('/Administration/Workers/AddOrUpdateWorker', vm.model).then(function () {\r\n                toastrWrapper.showTranslatedSuccess('workers.savedSuccessfully');\r\n                vm.goToListView();\r\n            });\r\n         };\r\n\r\n         vm.goToListView = function () {\r\n             $state.go('list');\r\n         };\r\n\r\n         vm.remove = function () {\r\n             workersRemoveService.remove(vm.model.id).then(function () {\r\n                 vm.goToListView();\r\n             });\r\n         };\r\n\r\n         if (!vm.isEditMode) {\r\n             $translate('workers.addNewUser').then(function (subtitle) {\r\n                 vm.subtitle = subtitle;\r\n             });\r\n         }\r\n\r\n         loadModel();\r\n     }]);\nangular\r\n    .module('dsrWorkers')\r\n    .controller('PreviewWorkerController', ['$state', '$stateParams', '$http', 'workersRemoveService', function ($state, $stateParams, $http, workersRemoveService) {\r\n        var vm = this;\r\n        vm.model = {};\r\n\r\n        vm.goToListView = function () {\r\n            $state.go('list');\r\n        };\r\n\r\n        vm.goToEditView = function () {\r\n            $state.go('edit', { id: vm.model.id });\r\n        };\r\n\r\n        vm.remove = function () {\r\n            workersRemoveService.remove(vm.model.id).then(function () {\r\n                vm.goToListView();\r\n            });\r\n        };\r\n\r\n        if ($stateParams.id) {\r\n            $http.post('/Administration/Workers/GetWorkerPreviewViewModel/' + $stateParams.id)\r\n                .then(function (response) {\r\n                    angular.extend(vm.model, response.data);\r\n                    vm.subtitle = vm.model.firstName + ' ' + vm.model.lastName;\r\n                });\r\n        }\r\n        else {\r\n            vm.goToListView();\r\n            return;\r\n        }\r\n    }]);\nangular\r\n    .module('dsrWorkers')\r\n    .controller('WorkerListController', ['DTColumnBuilder', '$translate', 'workersRemoveService', function (DTColumnBuilder, $translate, workersRemoveService) {\r\n        var vm = this;\r\n\r\n        vm.options = {\r\n            tableDataUrl: '/Administration/Workers/GetWorkerList',\r\n            columns: [\r\n                DTColumnBuilder.newColumn('firstName').withTitle($translate('common.firstName')),\r\n                DTColumnBuilder.newColumn('lastName').withTitle($translate('common.lastName')),\r\n                DTColumnBuilder.newColumn('externalName').withTitle($translate('common.externalName'))\r\n            ],\r\n            permissions: {\r\n                'view': 'Administration/Workers/View',\r\n                'edit': 'Administration/Workers/Edit',\r\n                'delete': 'Administration/Workers/Delete',\r\n                'add': 'Administration/Workers/Add'\r\n            },\r\n            removeItems: function (ids) {\r\n                return workersRemoveService.remove(ids);\r\n            }\r\n        };\r\n    }]);"]}