{"version":3,"sources":["dsrToolkit_userRoles-Js.min.js"],"names":["angular","module","config","DefaultModuleStateProvider","initialize","entityName","templatesPath","permissionRoot","factory","genericRemoveService","remove","ids","directive","restrict","template","join","link","scope","element","attrs","on","$apply","node","disabled","trvw","select","selected","ivhTreeviewMgr","ivhTreeviewBfs","$timeout","findParentForPermissionNode","tree","permissionId","parentNode","parentNodes","findAccessNode","_","find","children","isAccessNode","onTreeNodeSelectChange","e","ivhNode","ivhTree","ivhIsSelected","deselectEach","accessNode","data","search","treeOptions","expandToDepth","twistieCollapsedTpl","twistieExpandedTpl","twistieLeafTpl","onCbChange","show","controller","$state","$stateParams","$translate","$http","toastrWrapper","userRoleRemoveService","loadModel","post","id","then","response","userRole","extend","vm","model","subtitle","name","permissionTree","permissionTreeData","validate","this","isEditMode","current","save","selectedPermissionIds","push","permissionIds","showTranslatedSuccess","goToListView","go","goToEditView","DTColumnBuilder","options","tableDataUrl","columns","newColumn","withTitle","permissions","view","edit","delete","add","removeItems"],"mappings":"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","file":"dsrToolkit_userRoles-Js.min.js","sourcesContent":["angular\r\n    .module('dsrUserRoles', ['ui.router', 'datatables', 'datatables.bootstrap', 'dsrDataTables', 'ivh.treeview'])\r\n    .config(['DefaultModuleStateProvider', function (DefaultModuleStateProvider) {\r\n        DefaultModuleStateProvider.initialize({\r\n            entityName: 'UserRole',\r\n            templatesPath: '/Content/DSRToolkit/UserManagement/UserRoles/templates/',\r\n            permissionRoot: 'Administration/UserRoles/'\r\n        });\r\n    }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .factory('userRoleRemoveService', ['genericRemoveService', function (genericRemoveService) {\r\n        return {\r\n            remove: function (ids) {\r\n                return genericRemoveService('/Administration/UserRoles/Remove', 'userRoles.removeConfirmationMessage').remove(ids);\r\n            }\r\n        };\r\n    }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .directive('treeViewCheckbox', [function () {\r\n        return {\r\n            restrict: 'AE',\r\n            template: [\r\n              '<span class=\"tree-view-checkbox noselect\" ng-class=\"{\\'disabled\\': node.disabled}\">',\r\n                '<span ng-show=\"node.selected\" class=\"icheckbox_flat-green checked\"></span>',\r\n                '<span ng-show=\"node.__ivhTreeviewIndeterminate\" class=\"icheckbox_flat-green indeterminate\"></span>',\r\n                '<span ng-hide=\"node.selected || node.__ivhTreeviewIndeterminate\" class=\"icheckbox_flat-green\"></span>',\r\n              '</span>'\r\n            ].join(''),\r\n            link: function (scope, element, attrs) {\r\n                element.on('click', function () {\r\n                    scope.$apply(function () {\r\n                        if (!scope.node.disabled) {\r\n                            scope.trvw.select(scope.node, !scope.node.selected);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .directive('permissionTree', ['ivhTreeviewMgr', 'ivhTreeviewBfs', '$timeout', function (ivhTreeviewMgr, ivhTreeviewBfs, $timeout) {\r\n\r\n        function findParentForPermissionNode(tree, permissionId) {\r\n            var parentNode = null;\r\n            ivhTreeviewBfs(tree, function (node, parentNodes) {\r\n                if (parentNode !== null)\r\n                    return false;\r\n\r\n                if (node.permissionId === permissionId) {\r\n                    parentNode = parentNodes[0];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return parentNode;\r\n        }\r\n\r\n        function findAccessNode(parentNode) {\r\n            return _.find(parentNode.children, function (node) {\r\n                return node.isAccessNode;\r\n            });\r\n        }\r\n\r\n        function onTreeNodeSelectChange(e) {\r\n            if (e.ivhNode.permissionId) {\r\n                var parentNode = findParentForPermissionNode(e.ivhTree, e.ivhNode.permissionId);\r\n\r\n                if (e.ivhNode.isAccessNode && !e.ivhIsSelected) {\r\n                    ivhTreeviewMgr.deselectEach(e.ivhTree, parentNode.children);\r\n                }\r\n                else if (!e.ivhNode.isAccessNode && e.ivhIsSelected) {\r\n                    var accessNode = findAccessNode(parentNode);\r\n                    ivhTreeviewMgr.select(e.ivhTree, accessNode);\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            scope: {\r\n                data: '=',\r\n                search: '='\r\n            },\r\n            template: [\r\n                '<div ivh-treeview=\"data\" ng-if=\"show\" ivh-treeview-options=\"treeOptions\" ivh-treeview-validate=\"false\" ivh-treeview-filter=\"search\" class=\"noselect\">',\r\n                    '<script type=\"text/ng-template\">',\r\n                        '<div title=\"{{trvw.label(node)}}\" ng-class=\"{\\'disabled-node\\': node.disabled}\">',\r\n                            '<span ivh-treeview-toggle>',\r\n                                '<span ivh-treeview-twistie></span>',\r\n                            '</span>',\r\n                            '<tree-view-checkbox></tree-view-checkbox> ',\r\n                            '<span class=\"ivh-treeview-node-label\" ivh-treeview-toggle>',\r\n                                '<span style=\"user-select:auto\">{{ trvw.label(node) }}</span>',\r\n                            '</span>',\r\n                            '<div ivh-treeview-children></div>',\r\n                        '</div>',\r\n                    '</script>',\r\n                '</div>'\r\n            ].join(''),\r\n            link: function (scope, element, attrs) {\r\n                scope.treeOptions = {\r\n                    expandToDepth: 0,\r\n                    twistieCollapsedTpl: '<i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>',\r\n                    twistieExpandedTpl: '<i class=\"fa fa-chevron-up\"  aria-hidden=\"true\"></i>',\r\n                    twistieLeafTpl: '<span style=\"width:13px; display:inline-block\">&nbsp;</span>',\r\n                    onCbChange: onTreeNodeSelectChange\r\n                };\r\n\r\n                $timeout(function () {\r\n                    scope.show = true;\r\n                });\r\n            }\r\n        }\r\n    }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .controller('AddOrUpdateUserRoleController', ['$state', '$stateParams', '$translate', '$http', 'toastrWrapper', 'userRoleRemoveService', 'ivhTreeviewMgr', 'ivhTreeviewBfs',\r\n     function ($state, $stateParams, $translate, $http, toastrWrapper, userRoleRemoveService, ivhTreeviewMgr, ivhTreeviewBfs) {\r\n         var vm = this;\r\n         vm.isEditMode = $state.current.name === 'edit';\r\n         vm.model = {};\r\n\r\n         function loadModel() {\r\n             $http.post('/Administration/UserRoles/GetEditViewModel/' + ($stateParams.id || ''))\r\n                 .then(function (response) {\r\n                     var data = response.data;\r\n\r\n                     if (data.userRole) {\r\n                         angular.extend(vm.model, data.userRole);\r\n                         vm.subtitle = data.userRole.name;\r\n                     }\r\n\r\n                     vm.permissionTree = data.permissionTreeData;\r\n                     ivhTreeviewMgr.validate(vm.permissionTree, false);\r\n                 });\r\n         }\r\n\r\n         vm.save = function () {\r\n             var selectedPermissionIds = [];\r\n             ivhTreeviewBfs(vm.permissionTree, function (node) {\r\n                 if (node.selected && node.permissionId) {\r\n                     selectedPermissionIds.push(node.permissionId);\r\n                 }\r\n             });\r\n\r\n             vm.model.permissionIds = selectedPermissionIds;\r\n\r\n             $http.post('/Administration/UserRoles/AddOrUpdate', vm.model)\r\n                 .then(function () {\r\n                     toastrWrapper.showTranslatedSuccess('userRoles.savedSuccessfully');\r\n                     vm.goToListView();\r\n                 });\r\n         };\r\n\r\n         vm.goToListView = function () {\r\n             $state.go('list');\r\n         };\r\n\r\n         vm.remove = function () {\r\n             userRoleRemoveService.remove(vm.model.id).then(function () {\r\n                 vm.goToListView();\r\n             });\r\n         };\r\n\r\n         if (!vm.isEditMode) {\r\n             $translate('userRoles.addNewUserRole').then(function (subtitle) {\r\n                 vm.subtitle = subtitle;\r\n             });\r\n         }\r\n\r\n         loadModel();\r\n     }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .controller('PreviewUserRoleController', ['$state', '$stateParams', '$http', 'userRoleRemoveService', 'ivhTreeviewMgr',\r\n     function ($state, $stateParams, $http, userRoleRemoveService, ivhTreeviewMgr) {\r\n        var vm = this;\r\n        vm.model = {};\r\n\r\n        vm.goToListView = function () {\r\n            $state.go('list');\r\n        };\r\n\r\n        vm.goToEditView = function () {\r\n            $state.go('edit', { id: vm.model.id });\r\n        };\r\n\r\n        vm.remove = function () {\r\n            userRoleRemoveService.remove(vm.model.id).then(function () {\r\n                vm.goToListView();\r\n            });\r\n        };\r\n\r\n        if ($stateParams.id) {\r\n            $http.post('/Administration/UserRoles/GetPreviewViewModel/' + $stateParams.id)\r\n                .then(function (response) {\r\n                    angular.extend(vm.model, response.data);\r\n                    ivhTreeviewMgr.validate(vm.model.permissionTreeData, false);\r\n                    vm.subtitle = vm.model.name;\r\n                });\r\n        }\r\n        else {\r\n            vm.goToListView();\r\n            return;\r\n        }\r\n    }]);\nangular\r\n    .module('dsrUserRoles')\r\n    .controller('UserRoleListController', ['DTColumnBuilder', '$translate', 'userRoleRemoveService', function (DTColumnBuilder, $translate, userRoleRemoveService) {\r\n        var vm = this;\r\n\r\n        vm.options = {\r\n            tableDataUrl: '/Administration/UserRoles/GetList',\r\n            columns: [\r\n                DTColumnBuilder.newColumn('name').withTitle($translate('common.name')),\r\n            ],\r\n            permissions: {\r\n                'view': 'Administration/UserRoles/View',\r\n                'edit': 'Administration/UserRoles/Edit',\r\n                'delete': 'Administration/UserRoles/Delete',\r\n                'add': 'Administration/UserRoles/Add'\r\n            },\r\n            removeItems: function (ids) {\r\n                return userRoleRemoveService.remove(ids);\r\n            }\r\n        };\r\n    }]);"]}