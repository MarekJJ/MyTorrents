angular.module("sfcBreak",["ui.router","datatables","datatables.bootstrap","dsrDataTables"]).config(["DefaultModuleStateProvider",function(e){e.initialize({entityName:"Break",templatesPath:"/Areas/Administration/Scripts/Break/templates/",permissionRoot:"Administration/Break/",previewPermission:"Access"})}]),angular.module("sfcBreak").controller("AddOrUpdateBreakController",["$state","$stateParams","$http","$translate","genericRemoveService","toastrWrapper","$rootScope",function(e,t,i,r,o,a,n){function s(){var e=t.id||"";e&&i.post("/Administration/Break/GetEdit/"+e).then(function(e){var t=e.data.break;angular.extend(d.model,t),t&&(d.subtitle=t.name,d.reloadShifts())})}var d=this;d.removeService=o("/Administration/Break/Remove","break.removeConfirmationMessage"),d.isEditMode="edit"===e.current.name,d.model={breakShifts:[]};var l=1,m=[1,2,3],c=[];if(d.availShifts=[1,2,3],d.isEditMode){if(!t.id)return void e.go("list")}else r("break.addNewBreak").then(function(e){d.subtitle=e});s(),d.save=function(){var t={break:d.model,breakShiftsToRemove:c};i.post("/Administration/Break/AddOrUpdate",t).then(function(){a.showTranslatedSuccess("break.savedSuccessfully"),e.go("list")})},d.goToListView=function(){e.go("list")},d.remove=function(){d.removeService.remove(d.model.id).then(function(){d.goToListView()})},d.removeShift=function(e){var t=d.model.breakShifts[e].id;d.model.breakShifts.splice(e,1),"undefined"!=typeof t&&c.push(t),d.reloadShifts()},d.reloadShifts=function(){var e=[];$.each(m,function(t,i){var r=!1;$.each(d.model.breakShifts,function(e,t){if(t.shiftNo==i)return r=!0,!1}),r||e.push(i)}),d.availShifts=e},d.addShift=function(){var e={rowId:l++};d.model.breakShifts.push(e),d.reloadShifts()}}]),angular.module("sfcBreak").controller("BreakListController",["DTColumnBuilder","$translate","breakRemoveService",function(e,t,i){var r=this;r.options={tableDataUrl:"/Administration/Break/GetList",columns:[e.newColumn("code").withTitle(t("common.code")),e.newColumn("name").withTitle(t("common.name")),e.newColumn("active").withTitle(t("common.active")).withClass("text-center").renderWith(function(e,t,i){return'<readonly-checkbox checked="'+i.active+'" />'})],permissions:{edit:"Administration/Break/Edit",delete:"Administration/Break/Delete",add:"Administration/Break/Add"},removeItems:function(e){return i.remove(e)}}}]),angular.module("sfcBreak").factory("breakRemoveService",["genericRemoveService","$rootScope",function(e,t){return{remove:function(t){return e("/Administration/Break/Remove","break.removeConfirmationMessage").remove(t).then(function(e){})}}}]);
//# sourceMappingURL=break-Js.min.js.map
