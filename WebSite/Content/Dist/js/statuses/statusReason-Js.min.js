angular.module("sfcStatusReason",["ui.router","datatables","datatables.bootstrap","dsrDataTables"]).config(["DefaultModuleStateProvider",function(t){t.initialize({entityName:"StatusReason",templatesPath:"/Areas/Statuses/Scripts/StatusReason/templates/",permissionRoot:"Statuses/StatusReason/",previewPermission:"Access"})}]),angular.module("sfcStatusReason").controller("AddOrUpdateStatusReasonController",["$state","$stateParams","$http","$q","$translate","genericRemoveService","toastrWrapper","$rootScope",function(t,e,a,s,o,n,i,u){function r(){var t=e.id||"";a.post("/Statuses/StatusReason/GetEdit/"+t).then(function(t){var e=t.data.statusReason;return angular.extend(l.model,e),l.statuses=t.data.statuses,l.parentStatusReasons=t.data.parentStatusReasons,e?(l.subtitle=e.name,void(t.data.additionalData&&(l.statusAdditionalData[e.statusId]=t.data.additionalData))):void(l.model.active=!0)})}function d(t){return l.statusAdditionalData[t]?s.resolve(l.statusAdditionalData[t]):a.post("/Statuses/StatusReason/GetStatusReasonAdditionalData/",{statusId:l.model.statusId}).then(function(e){return l.statusAdditionalData[t]=e.data,l.statusAdditionalData[t]})}var l=this;if(l.removeService=n("/Statuses/StatusReason/Remove","statusReason.removeConfirmationMessage"),l.isEditMode="edit"===t.current.name,l.model={},l.statusAdditionalData={},l.isEditMode){if(!e.id)return void t.go("list")}else l.model.color="#ffffff",o("statusReason.addNewStatusReason").then(function(t){l.subtitle=t});r(),l.save=function(){"NONPRODUCTIVE"!==l.statusAdditionalData[l.model.statusId].statusType&&(l.model.nonProductiveStatusReason=null),a.post("/Statuses/StatusReason/AddOrUpdate",l.model).then(function(){i.showTranslatedSuccess("statusReason.savedSuccessfully"),t.go("list")})},l.goToListView=function(){t.go("list")},l.remove=function(){l.removeService.remove(l.model.id).then(function(){l.goToListView()})},l.onStatusChange=function(){l.model.functionIds=[],d(l.model.statusId).then(function(t){"NONPRODUCTIVE"===t.statusType?l.model.nonProductiveStatusReason={rejectReasonActive:!1,chargedDepartmentActive:!1,commentActive:!1}:l.model.nonProductiveStatusReason=null})}}]),angular.module("sfcStatusReason").controller("StatusReasonListController",["DTColumnBuilder","$translate","statusReasonRemoveService",function(t,e,a){var s=this;s.options={tableDataUrl:"/Statuses/StatusReason/GetList",columns:[t.newColumn("code").withTitle(e("common.code")),t.newColumn("name").withTitle(e("common.name")),t.newColumn("statusCode").withTitle(e("common.status")),t.newColumn("color").withTitle(e("statusReason.color")).withClass("text-center").renderWith(function(t,e,a){return'<span style="background-color: '+a.color+';" class="color-box"></span>'}),t.newColumn("statusReasonCode").withTitle(e("statusReason.statusReasonCode")),t.newColumn("order").withTitle(e("common.order")),t.newColumn("referenceCode").withTitle(e("statusReason.referenceCode")),t.newColumn("active").withTitle(e("common.active")).withClass("text-center").renderWith(function(t,e,a){return'<readonly-checkbox checked="'+t+'" />'})],permissions:{view:"Statuses/StatusReason/Access",edit:"Statuses/StatusReason/Edit",delete:"Statuses/StatusReason/Delete",add:"Statuses/StatusReason/Add"},removeItems:function(t){return a.remove(t)}}}]),angular.module("sfcStatusReason").controller("PreviewStatusReasonController",["$state","$stateParams","$http","statusReasonRemoveService",function(t,e,a,s){var o=this;return o.model={},o.goToListView=function(){t.go("list")},o.goToEditView=function(){t.go("edit",{id:o.model.id})},o.remove=function(){s.remove(o.model.id).then(function(){o.goToListView()})},e.id?void a.post("/Statuses/StatusReason/GetPreview/"+e.id).then(function(t){angular.extend(o.model,t.data),o.subtitle=o.model.name}):void o.goToListView()}]),angular.module("sfcStatusReason").factory("statusReasonRemoveService",["genericRemoveService","$rootScope",function(t,e){return{remove:function(e){return t("/Statuses/StatusReason/Remove","statusReason.removeConfirmationMessage").remove(e).then(function(t){})}}}]);
//# sourceMappingURL=statusReason-Js.min.js.map
