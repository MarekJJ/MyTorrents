<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accessForbidden" xml:space="preserve">
    <value>You don't have permission to perform this action.</value>
  </data>
  <data name="active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="attachedBy" xml:space="preserve">
    <value>Attached by</value>
  </data>
  <data name="attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="creationDate" xml:space="preserve">
    <value>Creation date</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="defaultValue" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="dictionary" xml:space="preserve">
    <value>Dictionary</value>
  </data>
  <data name="duration.days" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="duration.hours" xml:space="preserve">
    <value>hrs</value>
  </data>
  <data name="duration.minutes" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="endDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="entryAuthor" xml:space="preserve">
    <value>Entry author</value>
  </data>
  <data name="entryDate" xml:space="preserve">
    <value>Entry date</value>
  </data>
  <data name="export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="externalName" xml:space="preserve">
    <value>External name</value>
  </data>
  <data name="false" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="fieldType" xml:space="preserve">
    <value>Field type</value>
  </data>
  <data name="fileIsTooLarge" xml:space="preserve">
    <value>File is too large {{ fileSize }}MB: max {{ fileMaxSize }}MB</value>
  </data>
  <data name="firstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="lastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="lenght" xml:space="preserve">
    <value>Lenght</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="noAttachments" xml:space="preserve">
    <value>There is no attachments</value>
  </data>
  <data name="notFoundProblem" xml:space="preserve">
    <value>Resource not found: {{ url }}</value>
  </data>
  <data name="noValue" xml:space="preserve">
    <value>No default value</value>
  </data>
  <data name="order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="ordinalNumber" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="ownership" xml:space="preserve">
    <value>Ownership</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="qtyRequired" xml:space="preserve">
    <value>Quantity required</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="remarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="select" xml:space="preserve">
    <value>--select--</value>
  </data>
  <data name="serverResponseProblem" xml:space="preserve">
    <value>A problem occured with getting response from server</value>
  </data>
  <data name="signOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="startDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="true" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="um" xml:space="preserve">
    <value>UM</value>
  </data>
  <data name="uploadFile" xml:space="preserve">
    <value>Upload file</value>
  </data>
  <data name="validation.codeIsNotUnique" xml:space="preserve">
    <value>Code is not unique.</value>
  </data>
  <data name="validation.duplicatedEntry" xml:space="preserve">
    <value>Duplicated entry for selected object.</value>
  </data>
  <data name="validation.emailIsNotUnique" xml:space="preserve">
    <value>Email address is not unique.</value>
  </data>
  <data name="validation.greaterThanZero" xml:space="preserve">
    <value>Value must be greater than 0.</value>
  </data>
  <data name="validation.invalidEmail" xml:space="preserve">
    <value>Invalid email address.</value>
  </data>
  <data name="validation.loginIsNotUnique" xml:space="preserve">
    <value>Login is not unique.</value>
  </data>
  <data name="validation.maxDecimalDigits" xml:space="preserve">
    <value>Decimal digits cannot be greater or equal {{maxDecimalDigits}}.</value>
  </data>
  <data name="validation.maxLength" xml:space="preserve">
    <value>Max field length is {{ maxLength }} characters.</value>
  </data>
  <data name="validation.maxValue" xml:space="preserve">
    <value>Field value can be greater than {{ maxValue }}.</value>
  </data>
  <data name="validation.minValue" xml:space="preserve">
    <value>Field value can be lower than {{ minValue }}.</value>
  </data>
  <data name="validation.nameIsNotUnique" xml:space="preserve">
    <value>Name is not unique.</value>
  </data>
  <data name="validation.number" xml:space="preserve">
    <value>Field value is not correct number.</value>
  </data>
  <data name="validation.regex" xml:space="preserve">
    <value>The pattern is not match {{ regEx }}</value>
  </data>
  <data name="validation.required" xml:space="preserve">
    <value>Field is required.</value>
  </data>
  <data name="validation.valueIsNotUnique" xml:space="preserve">
    <value>Value is not unique.</value>
  </data>
  <data name="validFromDate" xml:space="preserve">
    <value>Valid from date</value>
  </data>
  <data name="value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="visible" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="warehouse" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="domain" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="site" xml:space="preserve">
    <value>Site</value>
  </data>
  <data name="anErrorOccuredWhileSaving" xml:space="preserve">
    <value>An error occurred while saving data.</value>
  </data>
  <data name="correct" xml:space="preserve">
    <value>Correct</value>
  </data>
  <data name="quantityCompleted" xml:space="preserve">
    <value>Quantity completed</value>
  </data>
  <data name="quantityRejected" xml:space="preserve">
    <value>Quantity rejected</value>
  </data>
  <data name="rejectReason" xml:space="preserve">
    <value>Reject reason</value>
  </data>
  <data name="validation.operationIsNotUnique" xml:space="preserve">
    <value>Operation is not unique.</value>
  </data>
  <data name="worker" xml:space="preserve">
    <value>Worker</value>
  </data>
  <data name="path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="control" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="activate" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="deactivate" xml:space="preserve">
    <value>Deactivate</value>
  </data>
  <data name="qtyReportAllowed" xml:space="preserve">
    <value>Report quantities</value>
  </data>
  <data name="dateFormat" xml:space="preserve">
    <value>YYYY-MM-DD HH:MM</value>
  </data>
  <data name="comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="correction" xml:space="preserve">
    <value>Correction</value>
  </data>
  <data name="durationTime" xml:space="preserve">
    <value>Duration time</value>
  </data>
  <data name="from" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="to" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="statusReason" xml:space="preserve">
    <value>Status reason</value>
  </data>
  <data name="validation.startDateShouldNotBeLaterThanEndDate" xml:space="preserve">
    <value>Start date should not be later than end date.</value>
  </data>
  <data name="endTime" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="startTime" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="notActiveObject" xml:space="preserve">
    <value>Is not active</value>
  </data>
  <data name="isNotActiveSelectDifferentOne" xml:space="preserve">
    <value>Is not active select different one</value>
  </data>
  <data name="validation.inThisWorkCenterMachineWiththisCodeAlreadyExisting" xml:space="preserve">
    <value>In selected work center machine with this code already existing.</value>
  </data>
  <data name="saveAndCreateNew" xml:space="preserve">
    <value>Save and create new</value>
  </data>
  <data name="selectWorker" xml:space="preserve">
    <value>Select Worker</value>
  </data>
</root>